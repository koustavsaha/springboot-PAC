apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    pipelinesascode.tekton.dev/target-namespace: "koustav-demo"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
    pipelinesascode.tekton.dev/on-event: pull_request
    pipelinesascode.tekton.dev/on-target-branch: master
    #pipelinesascode.tekton.dev/pipeline: https://raw.githubusercontent.com/koustavsaha/spring-boot-docker/master/TektonPipelines/Pipeline/pipeline-git-clone-build-push-deploy.yaml
  generateName: pipelinerun-git-clone-build-push-deploy-
spec:
  taskRunTemplate:
    serviceAccountName: pipeline
  params:
  - name: repo-url
    value: {{ repo_url }}
  - name: tag-name
    value: {{source_branch}}
  - name: image-full-path-with-tag
    value: quay.io/rh-ee-ksaha/test:{{source_branch}}
  - name: deployment-manifest
    value: https://raw.githubusercontent.com/koustavsaha/spring-boot-docker/master/TektonPipelines/Resources/deployment.yaml
  pipelineSpec:
    description: |
      this pipeline offers a typical CI/CD process, with a flow including:
      - fetching a git repository as the source
      - using buildah to build a Docker image by Dockerfile
      - pusing the built Docker image to a desired repository
      - deploying it to Kubernetes cluster
    
    # Parameters
    params:
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: tag-name
      type: string
      description: The git tag to clone.
    - name: image-full-path-with-tag
      type: string
      description: The image full path to host the built image, with version tag, e.g. "docker.io/koustavs18/nodejs-app:latest"
    - name: deployment-manifest
      type: string
      description: The manifest file for deployment.

    # Workspaces
    workspaces:
    - name: workspace
    - name: maven-settings
    - name: empty-dir
    - name: quay-cred
    
    # Taksks
    tasks:

    # 1. Task - fetch-repository
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
      - name: url
        value: $(params.repo-url)
      - name: revision
        value: $(params.tag-name)
      - name: deleteExisting
        value: "true"
      workspaces:
      - name: output
        workspace: workspace

    # 2. Task - maven build
    - name: maven
      taskRef:
        resolver: hub
        params:
        - name: catalog
          value: tekton-catalog-tasks
        - name: type
          value: artifact
        - name: kind
          value: task
        - name: name
          value: maven
        - name: version
          value: "0.3"
      runAfter:
      - fetch-repository
      params:
      - name: GOALS
        value:
          - -B
          - -DskipTests
          - clean
          - package
      workspaces:
      - name: maven-settings
        workspace: maven-settings
      - name: source
        workspace: workspace

    # 3. Task - buildah build & push
    - name: buildah
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
      - maven
      params:
        - name: IMAGE
          value: "$(params.image-full-path-with-tag)"
        - name: TLSVERIFY
          value: "false"
        - name: STORAGE_DRIVER
          value: "vfs"
      workspaces:
        - name: source
          workspace: workspace
        - name: dockerconfig
          workspace: quay-cred

    # 4. Task - kubectl deploy
    - name: deploy
      taskRef:
        resolver: hub
        params:
        - name: catalog
          value: tekton-catalog-tasks
        - name: type
          value: artifact
        - name: kind
          value: task
        - name: name
          value: kubernetes-actions
        - name: version
          value: "0.2"
      runAfter:
      - buildah
      params:
        - name: script
          value: |
            kubectl apply -f $(params.deployment-manifest)
            echo "----------"
            kubectl patch deployment spring-boot-docker -p '{"spec":{"template":{"spec":{"containers":[{"name":"myapp","image":"$(params.image-full-path-with-tag)"}]}}}}'
            kubectl get deployment
      workspaces:
        - name: kubeconfig-dir
          workspace: empty-dir
        - name: manifest-dir
          workspace: empty-dir
  workspaces:
  - name: maven-settings
    configmap:
      name: maven-settings
  - name: workspace
    persistentvolumeclaim:
      claimName: shared-workspace
  - name: quay-cred
    secret:
      secretName: quay-secret
  - name: empty-dir
    emptyDir: {}